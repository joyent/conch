.PHONY: test run build build-js format format-perl format-perl deps\
	install-deps generate-dbic web-assets watch-js watch-perl watch doc\
	migrate-db watch-test

run: build run-perl

run-perl:
	@bin/conch daemon

build: web-assets doc cpanfile.snapshot local

local:
	@carton install --deployment

test:
	@carton exec prove -j9 -lpr t/

format: format-perl format-js

# Exclude Schema files generated by dbicdump
format-perl:
	@find lib \
		-path lib/Conch/Schema -prune \
		-o -name "*.pm" -not -name "Schema*" -type f -exec perltidy {} +
	@find lib -name "*.bak" -delete

format-js:
	@cd ui && npm run prettier

web-assets: public/css/app.css public/js/app.js

ui/bin/app.js: ui/src/** ui/package-lock.json
	@cd ui && npm run-script build;

ui/package-lock.json: ui/package.json
	@cd ui && npm install;
	@touch ui/package.json ui/package-lock.json

public/js/app.js: ui/bin/app.js
	@cp ui/bin/app.js public/js/app.js

public/css/app.css: ui/css/app.css
	@cp ui/css/app.css public/css/app.css

doc: public/doc/index.html

public/doc/index.html: docs/conch-api/openapi-spec.yaml
	@cd docs/conch-api && npm install && npm run render
	@mkdir -p public/doc
	@cp docs/conch-api/index.html public/doc/index.html

watch-js:
	@cd ui && npm start

watch-assets:
	@find ui/css/app.css ui/bin/app.js | entr -r make web-assets

watch-perl:
	@find lib | entr -r -c make run-perl

watch-test:
	@find lib t | entr -r -c make test

watch:
	(make watch-js &)
	(make watch-assets &)
	make watch-perl

# '--deployment' installs the same dep versions that are in the lockfile
cpanfile.snapshot: cpanfile
	@carton install --deployment

generate-dbic:
	@carton exec dbicdump schema.conf

migrate-db:
	@../sql/run_migrations.sh

