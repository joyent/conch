requires 'perl', '5.26.0';


# basics
requires 'Data::UUID';
requires 'Data::Printer';
requires 'DateTime::Format::Strptime';
requires 'List::Compare';
requires 'Data::Validate::UUID';
requires 'Mail::Sendmail';
requires 'aliased';
requires 'Try::Tiny';
requires 'Class::StrongSingleton';
requires 'Time::HiRes';
requires 'Time::Moment', ">= 0.43";
requires 'IO::Socket::SSL';
requires 'Submodules';


# mojolicious
requires 'Minion';
requires 'Mojolicious';
requires 'Mojo::Pg';
requires 'Mojo::JSON_XS';
requires 'Mojo::Server::PSGI';
requires 'Mojolicious::Plugin::Bcrypt';
requires 'Mojolicious::Plugin::Util::RandomString';
requires 'Mojolicious::Plugin::NYTProf';

requires 'Moo';
requires 'Moo::Role::ToJSON';
requires 'Type::Tiny';
requires 'Types::Standard';
requires 'Types::UUID';
requires 'Role::Tiny';
requires 'List::MoreUtils';

### Legacy Deps
#
# String::CamelCase 0.03 had a broken META file that prevents the toolchain
# from being able to figure out its version, thus breaking 'carton install
# --deployment'. The issue was resolved in 0.04
# All our dependencies rely on 0.02 and up, but just to be careful, we'll pin
# it at 0.04 or greater.
requires 'String::CamelCase', '>= 0.04';

# database
requires 'DBD::Pg';
requires 'DBIx::Class';
requires 'DBIx::Class::Schema::Loader';
# DateTime::Format::Pg is required for DBIx::Class to inflate DateTimes, and
# can be removed once DBIx::Class is removed
requires 'DateTime::Format::Pg';
requires 'Config::General';
requires 'DBIx::Class::TimeStamp';

# moose
requires 'Moose';
requires 'MooseX::Types::UUID';
requires 'MooseX::MarkAsMethods';
requires 'MooseX::NonMoose';

# logging
requires 'Log::Any';
requires 'Log::Any::Adapter::Log4perl';
requires 'Log::Any::Adapter::Screen';
requires 'Log::Log4perl';
requires 'Log::Log4perl::Layout::JSON';
requires 'Log::Report';


on 'test' => sub {
    requires 'Test::More';
    requires 'Test::Exception';
    requires 'Mock::Quick';
    requires 'Test::PostgreSQL', ">= 1.24";
    requires 'Test::Pod::Coverage';
    requires 'IO::All';
    requires 'JSON::Validator';
    requires 'YAML::XS';
	requires 'Test::Exception';
};
